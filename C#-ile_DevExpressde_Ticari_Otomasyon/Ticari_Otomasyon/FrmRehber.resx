<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TPMusteri.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="TPFirma.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AqqGAAAAAElFTkSuQmCC
</value>
  </data>
</root>